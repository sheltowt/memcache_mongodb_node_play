{
  "name": "express-extension-to-accept",
  "description": "Convert URL file extensions to an accept header",
  "version": "0.0.2",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/expressjs/express-extension-to-accept.git"
  },
  "bugs": {
    "url": "https://github.com/expressjs/express-extension-to-accept/issues",
    "email": "me@jongleberry.com"
  },
  "license": "MIT",
  "dependencies": {
    "mime": "~1.2.11"
  },
  "devDependencies": {
    "mocha": "*",
    "express": "*",
    "supertest": "*",
    "should": "*"
  },
  "scripts": {
    "test": "make test"
  },
  "readme": "# Express Extension to Accept [![Build Status](https://travis-ci.org/expressjs/express-extension-to-accept.png)](https://travis-ci.org/expressjs/express-extension-to-accept)\n\nConvert URL file extensions to an accept header so you can defer file extension logic from your router to content negotiation.\nFor example, instead of supporting `/thing.html` and `/thing.json`,\nyou can just handle `/thing`.\nThis also improves caching most CDNs ignore `Vary: Accept`.\n\n## API\n\n### ExpToAccept(formats[])\n\n`formats` is an array of extensions to support.\n\n```js\nvar app = require('express')()\n\napp.use(require('express-extension-to-accept')[\n  'html',\n  'htm',\n  'json'\n])\n\napp.get('/:id', function (req, res, next) {\n  get(req.params.id, function (req, thing) {\n    res.format({\n      html: function () {\n        res.locals.thing = thing\n        res.render('layout')\n      },\n      json: function () {\n        res.send(thing)\n      }\n    })\n  })\n})\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "express-extension-to-accept@0.0.2",
  "dist": {
    "shasum": "fb805cd03ad3675b19883999cfff43134975374e",
    "tarball": "http://registry.npmjs.org/express-extension-to-accept/-/express-extension-to-accept-0.0.2.tgz"
  },
  "_from": "express-extension-to-accept@*",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "jongleberry",
    "email": "jonathanrichardong@gmail.com"
  },
  "maintainers": [
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "fb805cd03ad3675b19883999cfff43134975374e",
  "_resolved": "https://registry.npmjs.org/express-extension-to-accept/-/express-extension-to-accept-0.0.2.tgz"
}
